// ErrorBoundary.jsx
import React from 'react';
import { AlertCircle } from 'lucide-react';
import theme from '@al/theme';
const { colors, fontStack } = theme;

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true, error };
  }

  componentDidCatch(error, errorInfo) {
    console.error('Error caught by boundary:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return (
        <div style={{
          padding: '20px',
          margin: '20px',
          backgroundColor: '#fef2f2',
          border: '1px solid #fecaca',
          borderRadius: '8px'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <AlertCircle size={24} color="#ef4444" />
            <div>
              <h3 style={{ margin: 0, color: '#dc2626' }}>
                Dogodila se greÅ¡ka
              </h3>
              <p style={{ margin: '8px 0 0 0', color: '#7f1d1d' }}>
                {this.state.error?.message || 'Nepoznata greÅ¡ka'}
              </p>
              <button
                onClick={() => window.location.reload()}
                style={{
                  marginTop: '12px',
                  padding: '8px 16px',
                  backgroundColor: '#ef4444',
                  color: 'white',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer'
                }}
              >
                OsvjeÅ¾i stranicu
              </button>
            </div>
          </div>
        </div>
      );
    }

    return this.props.children;
  }
}

// U App.jsx wrap komponentu:
<ErrorBoundary>
  <EnhancedInvoiceAnalyzer />
</ErrorBoundary>
