import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import theme from '@al/theme';
const { colors, fontStack } = theme;

const MATERIAL_THEMES = {
  red: { bg: "linear-gradient(180deg, #fecaca, #ef4444)", ring: "#fecaca", glow: "rgba(239,68,68,.45)" },
  green: { bg: "linear-gradient(180deg, #bbf7d0, #22c55e)", ring: "#bbf7d0", glow: "rgba(34,197,94,.40)" },
  blue: { bg: "linear-gradient(180deg, #bfdbfe, #3b82f6)", ring: "#bfdbfe", glow: "rgba(59,130,246,.40)" },
};

function MaterialButton({ item }) {
  const theme = MATERIAL_THEMES[item.color];
  const [hover, setHover] = useState(false);

  return (
    <motion.div
      className="relative w-full aspect-square rounded-xl focus:outline-none ring-1 text-white shadow-inner cursor-pointer"
      style={{
        background: theme.bg,
        borderColor: theme.ring,
      }}
      onHoverStart={() => setHover(true)}
      onHoverEnd={() => setHover(false)}
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.98 }}
      onClick={() => console.log("Pick", item.code)}
    >
      <div className="absolute inset-0 rounded-xl" style={{ boxShadow: "inset 0 1px 0 rgba(255,255,255,.35)" }} />
      <div className="absolute top-1 left-1 text-[10px] font-semibold tracking-wide drop-shadow-sm">{item.code}</div>
      <div className="absolute bottom-1 left-1 text-[10px] drop-shadow-sm">{item.qty} pcs</div>
      <div className="absolute bottom-1 right-1 text-[10px] drop-shadow-sm uppercase">{item.color}</div>

      <AnimatePresence>
        {hover && (
          <motion.div
            initial={{ opacity: 0, y: 6 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 6 }}
            className="absolute -top-28 left-1/2 -translate-x-1/2 z-30 pointer-events-auto"
          >
            <div className="rounded-xl bg-white ring-1 ring-slate-200 shadow-2xl p-2 w-48 text-slate-900">
              <div className="text-xs font-medium">{item.code} â€¢ Alloy 6061-T6</div>
              <div className="text-[11px] text-slate-600 mb-2">Bin #{item.id} â€¢ {item.qty} pcs</div>
              <div className="flex gap-2">
                <button className="flex-1 text-xs px-2 py-1 rounded-lg bg-slate-900 text-white">Pick</button>
                <button className="flex-1 text-xs px-2 py-1 rounded-lg ring-1 ring-slate-200">Details</button>
                <button className="flex-1 text-xs px-2 py-1 rounded-lg ring-1 ring-slate-200">Hold</button>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}

export default function MaterialsGrid() {
  const COLS = 15;
  const ROWS = 5;
  const TOTAL = COLS * ROWS;

  const [items] = useState(() => {
    const rand = (n) => Math.floor(Math.random() * n);
    const colors = ["red", "green", "blue"];
    return Array.from({ length: TOTAL }, (_, i) => {
      const color = colors[rand(colors.length)];
      const baseQty = 20 + rand(120);
      const status = Math.random() < 0.16 && color === "red" ? "alert" : (Math.random() < 0.5 ? "ok" : "busy");
      return {
        id: i + 1,
        code: `AL-${String(i + 1).padStart(3, "0")}`,
        color,
        qty: baseQty,
        status,
      };
    });
  });

  return (
    <div className="max-w-7xl mx-auto">
      <div className="flex items-center justify-between mb-4">
        <div>
          <h1 className="text-2xl font-bold tracking-tight">Materials: Aluminum Positions</h1>
          <p className="mt-1 text-sm opacity-80">15 Ã— 5 dense grid â€¢ colors carry meaning â€¢ red tiles can emit a vibrating glow for urgent signals.</p>
        </div>
        <div className="text-xs rounded-lg ring-1 ring-slate-200 px-2 py-1 bg-white">Edit colors in MATERIAL_THEMES</div>
      </div>

      <div className="rounded-2xl ring-1 ring-slate-200 bg-white p-3">
        <div
          className="grid gap-2"
          style={{ gridTemplateColumns: `repeat(${COLS}, minmax(56px, 1fr))` }}
        >
          {items.map((it) => (
            <MaterialButton key={it.id} item={it} />
          ))}
        </div>

        <div className="mt-4 flex items-center gap-3 text-[11px] text-slate-600">
          <span className="inline-flex items-center gap-1">
            <span className="h-4 w-4 rounded bg-red-500 inline-block" /> Red = critical
          </span>
          <span className="inline-flex items-center gap-1">
            <span className="h-4 w-4 rounded bg-green-500 inline-block" /> Green = available
          </span>
          <span className="inline-flex items-center gap-1">
            <span className="h-4 w-4 rounded bg-blue-500 inline-block" /> Blue = in-use
          </span>
          <span className="ml-auto">Vibrating red glow = immediate attention</span>
        </div>
      </div>
    </div>
  );
}
